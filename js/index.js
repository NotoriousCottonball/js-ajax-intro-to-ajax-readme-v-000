function init() {
  let link = document.querySelector('a');
  link.addEventListener('click', e => {
        e.preventDefault();
        getRepositories();
  });
}

init();

function getRepositories() {
  const req = new XMLHttpRequest();
  req.addEventListener('load', showRepositories);
  req.open('GET', 'https://api.github.com/users/octocat/repos');
  req.send();
}


function showRepositories() {
  //THIS is set to the XMLHttpRequest object generated by the EventListener CLICK that fired this event as it LOADS.
  let repos = JSON.parse(this.responseText);
  
  console.log(repos);
  
  const repoList = `<ul>${repos.map(r =>'<li>' + r.name +
        ' - <a href="#" data-repo="' +
        r.name + '" onclick="getCommits(this)">Get Commits</a></li>').join('')}</ul>`;
        
  document.getElementById('repositories').innerHTML = repoList;
}



function getCommits(el) {
  //el is the element in repos object passed as THIS by onclick as it is mapped into array of a links.
  const name = el.dataset.repo;
  const req = new XMLHttpRequest();
  
  req.addEventListener('load', showCommits);
  req.open('GET', 'https://api.github.com/repos/octocat/' + name + '/commits');
  req.send();
}

function showCommits() {
 //THIS is set to the new XMLHttpRequest object generated at the click of Each LINK that fired this event as it LOADS.
 const commits = JSON.parse(this.responseText);
 const commitsList = `<ul>${commits.map(c =>'<li><strong>' + c.author.login + '</strong> - ' + c.commit.message + '</li>').join('')}</ul>`;
 document.getElementById('commits').innerHTML = commitsList;
}

//Now we can load repositories, then see commits for any repository dynamically without refreshing the page or reloading the repository list!



